% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/parse_observations.R
\name{parse_observations}
\alias{parse_observations}
\title{Pre-process training and experimental data from wide-format to long-format}
\usage{
parse_observations(
  x,
  subject_col,
  meas_col,
  tlen_col = NULL,
  image_col,
  barometer_col = NULL,
  laser_col = NULL,
  flen_col,
  iwidth_col,
  swidth_col,
  uas_col,
  timepoint_col = NULL,
  alt_conversion_col = NULL
)
}
\arguments{
\item{x}{Wide-format \code{data.frame} describing images and measurements}

\item{subject_col}{column name in \code{x} for subject IDs}

\item{meas_col}{character vector of column names in \code{x} with 
pixel-counts for each measurement of a subject}

\item{tlen_col}{column name in \code{x} with the true length value (i.e., in 
meters) of a measurement; primarily used to specify the true length value 
for an observation of a calibration object.  If \code{NULL}, then no true 
length will be associated with the measurement.}

\item{image_col}{column name in \code{x} containing names of images from 
which measurements are taken}

\item{barometer_col}{column name in \code{x} with Barometer altimeter values}

\item{laser_col}{column name in \code{x} with Laser altimeter values}

\item{flen_col}{column name in \code{x} with camera focal lengths (mm)}

\item{iwidth_col}{column name in \code{x} with image widths (pixels)}

\item{swidth_col}{column name in \code{x} with camera sensor widths (mm)}

\item{uas_col}{column names in \code{x} with UAS name or ID}

\item{timepoint_col}{column name in \code{x} with a timepoint value of a 
measurement.  If \code{NULL}, then all measurements are assumed to be at 
the same timepoint, or equivalently, that time does not matter for the 
analysis}

\item{alt_conversion_col}{if not \code{NULL}, column name in \code{x} with 
an altitude used to convert measurement columns from lengths to pixels}
}
\description{
Photogrammetric data are often recorded in a wide-format \code{data.frame}, 
in which each row contains all measurement information for a single animal.
The row contains the image information (i.e., observed altitude and sensor 
information) as well as all measurements for a given subject. This function
parses the wide-format data into a normalized \code{list} of 
\code{data.frame} objects that separately describe the image and measurement 
data.  This function can process observations of calibration data as well as 
experimental data.
}
\examples{
devtools::document()

# load example wide-format data
data("calibration")
data("whales")

# parse calibration study
calibration_data = parse_observations(
  x = calibration \%>\% filter(is.finite(Laser_Alt)), 
  subject_col = 'CO.ID',
  meas_col = 'Lpix', 
  tlen_col = 'CO.L', 
  image_col = 'image', 
  barometer_col = 'Baro_Alt',
  laser_col = 'Laser_Alt', 
  flen_col = 'Focal_Length', 
  iwidth_col = 'Iw', 
  swidth_col = 'Sw',
  uas_col = 'uas'
)

# parse field study
whale_data = parse_observations(
  x = whales\%>\% filter(is.finite(AltitudeLaser)), 
  subject_col = 'whale_ID',
  meas_col = 'TL.pix', 
  image_col = 'Image', 
  barometer_col = 'AltitudeBarometer',
  laser_col = 'AltitudeLaser', 
  flen_col = 'FocalLength', 
  iwidth_col = 'ImageWidth', 
  swidth_col = 'SensorWidth', 
  uas_col = 'UAS'
)

# TODO: add additional post-processing scripts that can help replace the 
# additional monitors that enrico created.  or, we can consider leaving those in 
# the model since they will be constrained to the appropriate length model 
# section.  but, this would require additional parameterization, for example,
# to get the growth curve data in shape.

# TODO: Make some vignettes that show how to reproduce enrico's analyses, etc.

# TODO: Make sure we offer some sort of developer's guide, so they can add their
# own models too... in this sense, maybe we push some of enrico's model back to
# enrico.  naturally, we'll need to provide some sort of example workflow for 
# how to make the required modifications and link a model in to code.  so, it 
# might be reasonable to start working on implementing the simpler models first,
# since the work done here will still be informative toward re-implementing a 
# growth curve model

# TODO: expand the model to account for time trends.  By default, add 
# constraints whereever we see timepoints increasing.  Naturally, this could 
# be challenging because we might only want to make this assumption for length
# measurements, not width measurements.  so, we'll need to check with KC about
# the function name/interface.  but, the overall idea is that we're doing a 
# decent job of creating a workflow for implementing different model structures.
# so, what will the naming conventions be for these types of "build_sampler" 
# objects? or will it just be "build_sampler" with different "length_model" 
# options and additional arguments?

devtools::document()

sampler = calibration_sampler(
  data = combine_observations(calibration_data, whale_data),
  priors = list(
    image_altitude = c(min = 0.1, max = 130),
    altimeter_bias = rbind(
      data.frame(altimeter = 'Barometer', mean = 0, sd = 1e2),
      data.frame(altimeter = 'Laser', mean = 0, sd = 1e2)
    ),
    altimeter_variance = rbind(
      data.frame(altimeter = 'Barometer', shape = .01, rate = .01),
      data.frame(altimeter = 'Laser', shape = .01, rate = .01)
    ),
    pixel_variance = c(shape = .01, rate = .01)
  )
)

output = sampler(niter = 1e4)

df = do.call(rbind, lapply(output$altimeters, function(x) x$summary))
rownames(df) = NULL

df
}
